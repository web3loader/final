{"version":3,"file":"static/js/5634.ac3bce7a.chunk.js","mappings":"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","sources":["components/earn/styled.tsx","components/addLiquidity/OwnershipWarning.tsx","../node_modules/react-feather/dist/icons/cloud-off.js","../node_modules/react-feather/dist/icons/bar-chart-2.js","components/LiquidityChartRangeInput/Area.tsx","components/LiquidityChartRangeInput/AxisBottom.tsx","components/LiquidityChartRangeInput/svg.tsx","components/LiquidityChartRangeInput/Brush.tsx","components/LiquidityChartRangeInput/Line.tsx","../node_modules/react-feather/dist/icons/refresh-ccw.js","../node_modules/react-feather/dist/icons/zoom-in.js","../node_modules/react-feather/dist/icons/zoom-out.js","components/LiquidityChartRangeInput/Zoom.tsx","components/LiquidityChartRangeInput/Chart.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","components/LiquidityChartRangeInput/hooks.ts","components/LiquidityChartRangeInput/index.tsx","components/PositionPreview/index.tsx","components/RangeSelector/PresetsButtons.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidity/Review.tsx","pages/AddLiquidity/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","utils/addressesAreEquivalent.ts","../node_modules/react-feather/dist/icons/inbox.js"],"sourcesContent":["import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport xlUnicorn from '../../assets/images/xl_uni.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { Trans } from '@lingui/macro'\nimport { AlertTriangle } from 'react-feather'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst ExplainerText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n  margin-bottom: 8px;\n`\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\n  border-radius: 16px;\n  margin-top: 12px;\n  max-width: 480px;\n  padding: 12px 20px;\n  width: 100%;\n`\n\ninterface OwnershipWarningProps {\n  ownerAddress: string\n}\n\nconst OwnershipWarning = ({ ownerAddress }: OwnershipWarningProps) => (\n  <Wrapper>\n    <TitleRow>\n      <AlertTriangle style={{ marginRight: '8px' }} />\n      <ThemedText.SubHeader color=\"deprecated_accentWarning\">\n        <Trans>Warning</Trans>\n      </ThemedText.SubHeader>\n    </TitleRow>\n    <ExplainerText>\n      <Trans>\n        You are not the owner of this LP position. You will not be able to withdraw the liquidity from this position\n        unless you own the following address: {ownerAddress}\n      </Trans>\n    </ExplainerText>\n  </Wrapper>\n)\n\nexport default OwnershipWarning\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar CloudOff = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  }));\n});\nCloudOff.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCloudOff.displayName = 'CloudOff';\nexport default CloudOff;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar BarChart2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"20\",\n    x2: \"18\",\n    y2: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"20\",\n    x2: \"12\",\n    y2: \"4\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"20\",\n    x2: \"6\",\n    y2: \"14\"\n  }));\n});\nBarChart2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nBarChart2.displayName = 'BarChart2';\nexport default BarChart2;","import { area, curveStepAfter, ScaleLinear } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { ChartEntry } from './types'\n\nconst Path = styled.path<{ fill?: string }>`\n  opacity: 0.5;\n  stroke: ${({ fill, theme }) => fill ?? theme.accent1};\n  fill: ${({ fill, theme }) => fill ?? theme.accent1};\n`\n\nexport const Area = ({\n  series,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  fill,\n}: {\n  series: ChartEntry[]\n  xScale: ScaleLinear<number, number>\n  yScale: ScaleLinear<number, number>\n  xValue: (d: ChartEntry) => number\n  yValue: (d: ChartEntry) => number\n  fill?: string\n}) =>\n  useMemo(\n    () => (\n      <Path\n        fill={fill}\n        d={\n          area()\n            .curve(curveStepAfter)\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n            .y0(yScale(0))(\n            series.filter((d) => {\n              const value = xScale(xValue(d))\n              return value > 0 && value <= window.innerWidth\n            }) as Iterable<[number, number]>\n          ) ?? undefined\n        }\n      />\n    ),\n    [fill, series, xScale, xValue, yScale, yValue]\n  )\n","import { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n\n  text {\n    color: ${({ theme }) => theme.neutral2};\n    transform: translateY(5px);\n  }\n`\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n  const axisRef = (axis: SVGGElement) => {\n    axis &&\n      select(axis)\n        .call(axisGenerator)\n        .call((g) => g.select('.domain').remove())\n  }\n\n  return <g ref={axisRef} />\n}\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  offset = 0,\n}: {\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n  offset?: number\n}) =>\n  useMemo(\n    () => (\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\n      </StyledGroup>\n    ),\n    [innerHeight, offset, xScale]\n  )\n","/**\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    'm 1 0', // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    'h 12', // horizontal line\n    'q 2 0, 2 2', // rounded corner\n    'v 22', // vertical line\n    'q 0 2 -2 2', // rounded corner\n    'h -12', // horizontal line\n    `z`, // close path\n  ].join(' ')\n\nexport const brushHandleAccentPath = () =>\n  [\n    'm 5 7', // move to first accent\n    'v 14', // vertical line\n    'M 0 0', // move to origin\n    'm 9 7', // move to second accent\n    'v 14', // vertical line\n    'z',\n  ].join(' ')\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string\n  size?: number\n  margin?: number\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n)\n","import { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from 'components/LiquidityChartRangeInput/svg'\nimport { BrushBehavior, brushX, D3BrushEvent, ScaleLinear, select } from 'd3'\nimport usePrevious from 'hooks/usePrevious'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Handle = styled.path<{ color: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 3;\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`\n\nconst HandleAccent = styled.path`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 1.5;\n  stroke: ${({ theme }) => theme.white};\n  opacity: ${({ theme }) => theme.opacity.hover};\n`\n\nconst LabelGroup = styled.g<{ visible: boolean }>`\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\n  transition: opacity 300ms;\n`\n\nconst TooltipBackground = styled.rect`\n  fill: ${({ theme }) => theme.surface3};\n`\n\nconst Tooltip = styled.text`\n  text-anchor: middle;\n  font-size: 13px;\n  fill: ${({ theme }) => theme.neutral1};\n`\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2\n\n/**\n * Returns true if every element in `a` maps to the\n * same pixel coordinate as elements in `b`\n */\nconst compare = (a: [number, number], b: [number, number], xScale: ScaleLinear<number, number>): boolean => {\n  // normalize pixels to 1 decimals\n  const aNorm = a.map((x) => xScale(x).toFixed(1))\n  const bNorm = b.map((x) => xScale(x).toFixed(1))\n  return aNorm.every((v, i) => v === bNorm[i])\n}\n\nexport const Brush = ({\n  id,\n  xScale,\n  interactive,\n  brushLabelValue,\n  brushExtent,\n  setBrushExtent,\n  innerWidth,\n  innerHeight,\n  westHandleColor,\n  eastHandleColor,\n}: {\n  id: string\n  xScale: ScaleLinear<number, number>\n  interactive: boolean\n  brushLabelValue: (d: 'w' | 'e', x: number) => string\n  brushExtent: [number, number]\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void\n  innerWidth: number\n  innerHeight: number\n  westHandleColor: string\n  eastHandleColor: string\n}) => {\n  const brushRef = useRef<SVGGElement | null>(null)\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null)\n\n  // only used to drag the handles on brush for performance\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent)\n  const [showLabels, setShowLabels] = useState(false)\n  const [hovering, setHovering] = useState(false)\n\n  const previousBrushExtent = usePrevious(brushExtent)\n\n  const brushed = useCallback(\n    (event: D3BrushEvent<unknown>) => {\n      const { type, selection, mode } = event\n\n      if (!selection) {\n        setLocalBrushExtent(null)\n        return\n      }\n\n      const scaled = (selection as [number, number]).map(xScale.invert) as [number, number]\n\n      // avoid infinite render loop by checking for change\n      if (type === 'end' && !compare(brushExtent, scaled, xScale)) {\n        setBrushExtent(scaled, mode)\n      }\n\n      setLocalBrushExtent(scaled)\n    },\n    [xScale, brushExtent, setBrushExtent]\n  )\n\n  // keep local and external brush extent in sync\n  // i.e. snap to ticks on bruhs end\n  useEffect(() => {\n    setLocalBrushExtent(brushExtent)\n  }, [brushExtent])\n\n  // initialize the brush\n  useEffect(() => {\n    if (!brushRef.current) return\n\n    brushBehavior.current = brushX<SVGGElement>()\n      .extent([\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n      ])\n      .handleSize(30)\n      .filter(() => interactive)\n      .on('brush end', brushed)\n\n    brushBehavior.current(select(brushRef.current))\n\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n      select(brushRef.current)\n        .transition()\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale))\n    }\n\n    // brush linear gradient\n    select(brushRef.current)\n      .selectAll('.selection')\n      .attr('stroke', 'none')\n      .attr('fill-opacity', '0.1')\n      .attr('fill', `url(#${id}-gradient-selection)`)\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale])\n\n  // respond to xScale changes only\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) return\n\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any)\n  }, [brushExtent, xScale])\n\n  // show labels when local brush changes\n  useEffect(() => {\n    setShowLabels(true)\n    const timeout = setTimeout(() => setShowLabels(false), 1500)\n    return () => clearTimeout(timeout)\n  }, [localBrushExtent])\n\n  // variables to help render the SVGs\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX\n\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0)\n  const showEastArrow =\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth)\n\n  const westHandleInView =\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth\n  const eastHandleInView =\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth\n\n  return useMemo(\n    () => (\n      <>\n        <defs>\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n            <stop stopColor={westHandleColor} />\n            <stop stopColor={eastHandleColor} offset=\"1\" />\n          </linearGradient>\n\n          {/* clips at exactly the svg area */}\n          <clipPath id={`${id}-brush-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n          </clipPath>\n        </defs>\n\n        {/* will host the d3 brush */}\n        <g\n          ref={brushRef}\n          clipPath={`url(#${id}-brush-clip)`}\n          onMouseEnter={() => setHovering(true)}\n          onMouseLeave={() => setHovering(false)}\n        />\n\n        {/* custom brush handles */}\n        {localBrushExtent && (\n          <>\n            {/* west handle */}\n            {westHandleInView ? (\n              <g\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${\n                  flipWestHandle ? '-1' : '1'\n                }, 1)`}\n              >\n                <g>\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipWestHandle ? '1' : '-1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('w', localBrushExtent[0])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {/* east handle */}\n            {eastHandleInView ? (\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}>\n                <g>\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('e', localBrushExtent[1])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\n\n            {showEastArrow && (\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\n                <OffScreenHandle color={eastHandleColor} />\n              </g>\n            )}\n          </>\n        )}\n      </>\n    ),\n    [\n      brushLabelValue,\n      eastHandleColor,\n      eastHandleInView,\n      flipEastHandle,\n      flipWestHandle,\n      hovering,\n      id,\n      innerHeight,\n      innerWidth,\n      localBrushExtent,\n      showEastArrow,\n      showLabels,\n      showWestArrow,\n      westHandleColor,\n      westHandleInView,\n      xScale,\n    ]\n  )\n}\n","import { ScaleLinear } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledLine = styled.line`\n  opacity: 0.5;\n  stroke-width: 2;\n  stroke: ${({ theme }) => theme.neutral1};\n  fill: none;\n`\n\nexport const Line = ({\n  value,\n  xScale,\n  innerHeight,\n}: {\n  value: number\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n}) =>\n  useMemo(\n    () => <StyledLine x1={xScale(value)} y1=\"0\" x2={xScale(value)} y2={innerHeight} />,\n    [value, xScale, innerHeight]\n  )\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar RefreshCcw = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1 4 1 10 7 10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"23 20 23 14 17 14\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"\n  }));\n});\nRefreshCcw.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRefreshCcw.displayName = 'RefreshCcw';\nexport default RefreshCcw;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomIn = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"11\",\n    y1: \"8\",\n    x2: \"11\",\n    y2: \"14\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomIn.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomIn.displayName = 'ZoomIn';\nexport default ZoomIn;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomOut = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomOut.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomOut.displayName = 'ZoomOut';\nexport default ZoomOut;","import { ButtonGray } from 'components/Button'\nimport { ScaleLinear, select, zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather'\nimport styled from 'styled-components'\n\nimport { ZoomLevels } from './types'\n\nconst Wrapper = styled.div<{ count: number }>`\n  display: grid;\n  grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\n  grid-gap: 6px;\n\n  position: absolute;\n  top: -32px;\n  right: 0;\n`\n\nconst Button = styled(ButtonGray)`\n  &:hover {\n    background-color: ${({ theme }) => theme.surface3};\n    color: ${({ theme }) => theme.neutral1};\n  }\n\n  width: 32px;\n  height: 32px;\n  padding: 4px;\n`\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  showResetButton,\n  zoomLevels,\n}: {\n  svg: SVGElement | null\n  xScale: ScaleLinear<number, number>\n  setZoom: (transform: ZoomTransform) => void\n  width: number\n  height: number\n  resetBrush: () => void\n  showResetButton: boolean\n  zoomLevels: ZoomLevels\n}) {\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>()\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg]\n  )\n\n  useEffect(() => {\n    if (!svg) return\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on('zoom', ({ transform }: { transform: ZoomTransform }) => setZoom(transform))\n\n    select(svg as Element).call(zoomBehavior.current)\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min])\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial()\n  }, [zoomInitial, zoomLevels])\n\n  return (\n    <Wrapper count={showResetButton ? 3 : 2}>\n      {showResetButton && (\n        <Button\n          onClick={() => {\n            resetBrush()\n            zoomReset()\n          }}\n          disabled={false}\n        >\n          <RefreshCcw size={16} />\n        </Button>\n      )}\n      <Button onClick={zoomIn} disabled={false}>\n        <ZoomIn size={16} />\n      </Button>\n      <Button onClick={zoomOut} disabled={false}>\n        <ZoomOut size={16} />\n      </Button>\n    </Wrapper>\n  )\n}\n","import { max, scaleLinear, ZoomTransform } from 'd3'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nimport { Area } from './Area'\nimport { AxisBottom } from './AxisBottom'\nimport { Brush } from './Brush'\nimport { Line } from './Line'\nimport { ChartEntry, LiquidityChartRangeInputProps } from './types'\nimport Zoom, { ZoomOverlay } from './Zoom'\n\nconst xAccessor = (d: ChartEntry) => d.price0\nconst yAccessor = (d: ChartEntry) => d.activeLiquidity\n\nexport function Chart({\n  id = 'liquidityChartRangeInput',\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null)\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null)\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins]\n  )\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    }\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale)\n      scales.xScale.domain(newXscale.domain())\n    }\n\n    return scales\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom])\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null)\n  }, [zoomLevels])\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined)\n    }\n  }, [brushDomain, onBrushDomainChange, xScale])\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            'reset'\n          )\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: 'visible' }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  )\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\n\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: Ticks,\n  pivot: number,\n  ascending: boolean\n): TickProcessed[] {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  }\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = []\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i].tick)\n    const currentTickProcessed: TickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: tickToPrice(token0, token1, tick).toFixed(PRICE_FIXED_DIGITS),\n    }\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\n      )\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      )\n    }\n\n    processedTicks.push(currentTickProcessed)\n    previousTickProcessed = currentTickProcessed\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse()\n  }\n\n  return processedTicks\n}\n","import { ChainId, Currency, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, nearestUsableTick, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { ZERO_ADDRESS } from 'constants/misc'\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\nimport { apolloClient } from 'graphql/thegraph/apollo'\nimport JSBI from 'jsbi'\nimport { useSingleContractMultipleData } from 'lib/hooks/multicall'\nimport ms from 'ms'\nimport { useEffect, useMemo, useState } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\n\nimport { useTickLens } from './useContract'\nimport { PoolState, usePool } from './usePools'\n\nconst PRICE_FIXED_DIGITS = 8\nconst CHAIN_IDS_MISSING_SUBGRAPH_DATA = [ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI]\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  tick: number\n  liquidityActive: JSBI\n  liquidityNet: JSBI\n  price0: string\n}\n\nconst REFRESH_FREQUENCY = { blocksPerFetch: 2 }\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\n\nconst bitmapIndex = (tick: number, tickSpacing: number) => {\n  return Math.floor(tick / tickSpacing / 256)\n}\n\nfunction useTicksFromTickLens(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  numSurroundingTicks: number | undefined = 125\n) {\n  const [tickDataLatestSynced, setTickDataLatestSynced] = useState<TickData[]>([])\n\n  const [poolState, pool] = usePool(currencyA, currencyB, feeAmount)\n\n  const tickSpacing = feeAmount && TICK_SPACINGS[feeAmount]\n\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = pool?.tickCurrent && tickSpacing ? nearestUsableTick(pool?.tickCurrent, tickSpacing) : undefined\n\n  const { chainId } = useWeb3React()\n\n  const poolAddress =\n    currencyA && currencyB && feeAmount && poolState === PoolState.EXISTS\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  // it is also possible to grab all tick data but it is extremely slow\n  // bitmapIndex(nearestUsableTick(TickMath.MIN_TICK, tickSpacing), tickSpacing)\n  const minIndex = useMemo(\n    () =>\n      tickSpacing && activeTick ? bitmapIndex(activeTick - numSurroundingTicks * tickSpacing, tickSpacing) : undefined,\n    [tickSpacing, activeTick, numSurroundingTicks]\n  )\n\n  const maxIndex = useMemo(\n    () =>\n      tickSpacing && activeTick ? bitmapIndex(activeTick + numSurroundingTicks * tickSpacing, tickSpacing) : undefined,\n    [tickSpacing, activeTick, numSurroundingTicks]\n  )\n\n  const tickLensArgs: [string, number][] = useMemo(\n    () =>\n      maxIndex && minIndex && poolAddress && poolAddress !== ZERO_ADDRESS\n        ? new Array(maxIndex - minIndex + 1)\n            .fill(0)\n            .map((_, i) => i + minIndex)\n            .map((wordIndex) => [poolAddress, wordIndex])\n        : [],\n    [minIndex, maxIndex, poolAddress]\n  )\n\n  const tickLens = useTickLens()\n  const callStates = useSingleContractMultipleData(\n    tickLensArgs.length > 0 ? tickLens : undefined,\n    'getPopulatedTicksInWord',\n    tickLensArgs,\n    REFRESH_FREQUENCY\n  )\n\n  const isError = useMemo(() => callStates.some(({ error }) => error), [callStates])\n  const isLoading = useMemo(() => callStates.some(({ loading }) => loading), [callStates])\n  const IsSyncing = useMemo(() => callStates.some(({ syncing }) => syncing), [callStates])\n  const isValid = useMemo(() => callStates.some(({ valid }) => valid), [callStates])\n\n  const tickData: TickData[] = useMemo(\n    () =>\n      callStates\n        .map(({ result }) => result?.populatedTicks)\n        .reduce(\n          (accumulator, current) => [\n            ...accumulator,\n            ...(current?.map((tickData: TickData) => {\n              return {\n                tick: tickData.tick,\n                liquidityNet: JSBI.BigInt(tickData.liquidityNet),\n              }\n            }) ?? []),\n          ],\n          []\n        ),\n    [callStates]\n  )\n\n  // reset on input change\n  useEffect(() => {\n    setTickDataLatestSynced([])\n  }, [currencyA, currencyB, feeAmount])\n\n  // return the latest synced tickData even if we are still loading the newest data\n  useEffect(() => {\n    if (!IsSyncing && !isLoading && !isError && isValid) {\n      setTickDataLatestSynced(tickData.sort((a, b) => a.tick - b.tick))\n    }\n  }, [isError, isLoading, IsSyncing, tickData, isValid])\n\n  return useMemo(\n    () => ({ isLoading, IsSyncing, isError, isValid, tickData: tickDataLatestSynced }),\n    [isLoading, IsSyncing, isError, isValid, tickDataLatestSynced]\n  )\n}\n\nfunction useTicksFromSubgraph(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  skip = 0\n) {\n  const { chainId } = useWeb3React()\n  const poolAddress =\n    currencyA && currencyB && feeAmount\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  return useAllV3TicksQuery({\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`),\n    client: apolloClient,\n  })\n}\n\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\n// Fetches all ticks for a given pool\nfunction useAllV3Ticks(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): {\n  isLoading: boolean\n  error: unknown\n  ticks?: TickData[]\n} {\n  const useSubgraph = currencyA ? !CHAIN_IDS_MISSING_SUBGRAPH_DATA.includes(currencyA.chainId) : true\n\n  const tickLensTickData = useTicksFromTickLens(!useSubgraph ? currencyA : undefined, currencyB, feeAmount)\n\n  const [skipNumber, setSkipNumber] = useState(0)\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\n  const {\n    data,\n    error,\n    loading: isLoading,\n  } = useTicksFromSubgraph(useSubgraph ? currencyA : undefined, currencyB, feeAmount, skipNumber)\n\n  useEffect(() => {\n    if (data?.ticks.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\n      }\n    }\n  }, [data?.ticks])\n\n  return {\n    isLoading: useSubgraph\n      ? isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE\n      : tickLensTickData.isLoading,\n    error: useSubgraph ? error : tickLensTickData.isError,\n    ticks: useSubgraph ? subgraphTickData : tickLensTickData.tickData,\n  }\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): {\n  isLoading: boolean\n  error: any\n  activeTick?: number\n  data?: TickProcessed[]\n} {\n  const pool = usePool(currencyA, currencyB, feeAmount)\n\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(pool[1]?.tickCurrent, feeAmount), [pool, feeAmount])\n\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount)\n\n  return useMemo(() => {\n    if (\n      !currencyA ||\n      !currencyB ||\n      activeTick === undefined ||\n      pool[0] !== PoolState.EXISTS ||\n      !ticks ||\n      ticks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const token0 = currencyA?.wrapped\n    const token1 = currencyB?.wrapped\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error('TickData pivot not found')\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const activeTickProcessed: TickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n      price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS),\n    }\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n    return {\n      isLoading,\n      error,\n      activeTick,\n      data: ticksProcessed,\n    }\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error])\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { useCallback, useMemo } from 'react'\n\nimport { ChartEntry } from './types'\n\nexport function useDensityChartData({\n  currencyA,\n  currencyB,\n  feeAmount,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n}) {\n  const { isLoading, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n  const formatData = useCallback(() => {\n    if (!data?.length) {\n      return undefined\n    }\n\n    const newData: ChartEntry[] = []\n\n    for (let i = 0; i < data.length; i++) {\n      const t: TickProcessed = data[i]\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(t.price0),\n      }\n\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry)\n      }\n    }\n\n    return newData\n  }, [data])\n\n  return useMemo(() => {\n    return {\n      isLoading,\n      error,\n      formattedData: !isLoading ? formatData() : undefined,\n    }\n  }, [isLoading, error, formatData])\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useColor } from 'hooks/useColor'\nimport { saturate } from 'polished'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { BarChart2, CloudOff, Inbox } from 'react-feather'\nimport { batch } from 'react-redux'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { Chart } from './Chart'\nimport { useDensityChartData } from './hooks'\nimport { ZoomLevels } from './types'\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOWEST]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n}\n\nconst ChartWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  max-height: 200px;\n  justify-content: center;\n  align-content: center;\n`\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <ColumnCenter style={{ height: '100%', justifyContent: 'center' }}>\n      {icon}\n      {message && (\n        <ThemedText.DeprecatedMediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\n          {message}\n        </ThemedText.DeprecatedMediumHeader>\n      )}\n    </ColumnCenter>\n  )\n}\n\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n  price?: number\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  interactive: boolean\n}) {\n  const theme = useTheme()\n\n  const tokenAColor = useColor(currencyA?.wrapped)\n  const tokenBColor = useColor(currencyB?.wrapped)\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped)\n\n  const { isLoading, error, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount,\n  })\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain: [number, number], mode: string | undefined) => {\n      let leftRangeValue = Number(domain[0])\n      const rightRangeValue = Number(domain[1])\n\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6\n      }\n\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6))\n        }\n\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6))\n          }\n        }\n      })\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\n  )\n\n  interactive = interactive && Boolean(formattedData?.length)\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined\n  }, [isSorted, priceLower, priceUpper])\n\n  const { formatDelta } = useFormatter()\n  const brushLabelValue = useCallback(\n    (d: 'w' | 'e', x: number) => {\n      if (!price) return ''\n\n      if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0'\n      if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return '∞'\n\n      const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100\n\n      return price ? `${(Math.sign(percent) < 0 ? '-' : '') + formatDelta(percent)}` : ''\n    },\n    [formatDelta, isSorted, price, ticksAtLimit]\n  )\n\n  const isUninitialized = !currencyA || !currencyB || (formattedData === undefined && !isLoading)\n\n  return (\n    <AutoColumn gap=\"md\" style={{ minHeight: '200px' }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={<Trans>Your position will appear here.</Trans>}\n          icon={<Inbox size={56} stroke={theme.neutral1} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.neutral2} />} />\n      ) : error ? (\n        <InfoBox\n          message={<Trans>Liquidity data not available.</Trans>}\n          icon={<CloudOff size={56} stroke={theme.neutral2} />}\n        />\n      ) : !formattedData || formattedData.length === 0 || !price ? (\n        <InfoBox\n          message={<Trans>There is no liquidity data.</Trans>}\n          icon={<BarChart2 size={56} stroke={theme.neutral2} />}\n        />\n      ) : (\n        <ChartWrapper>\n          <Chart\n            data={{ series: formattedData, current: price }}\n            dimensions={{ width: 560, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: theme.accent1,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor) ?? theme.critical,\n                  east: saturate(0.1, tokenBColor) ?? theme.accent1,\n                },\n              },\n            }}\n            interactive={interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </ChartWrapper>\n      )}\n    </AutoColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { Break } from 'components/earn/styled'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport RateToggle from 'components/RateToggle'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { ReactNode, useCallback, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nexport const PositionPreview = ({\n  position,\n  title,\n  inRange,\n  baseCurrencyDefault,\n  ticksAtLimit,\n}: {\n  position: Position\n  title?: ReactNode\n  inRange: boolean\n  baseCurrencyDefault?: Currency\n  ticksAtLimit: { [bound: string]: boolean | undefined }\n}) => {\n  const theme = useTheme()\n  const { formatCurrencyAmount, formatDelta, formatPrice, formatTickPrice } = useFormatter()\n\n  const currency0 = unwrappedToken(position.pool.token0)\n  const currency1 = unwrappedToken(position.pool.token1)\n\n  // track which currency should be base\n  const [baseCurrency, setBaseCurrency] = useState(\n    baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n        ? currency1\n        : currency0\n      : currency0\n  )\n\n  const sorted = baseCurrency === currency0\n  const quoteCurrency = sorted ? currency1 : currency0\n\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1)\n\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert()\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert()\n\n  const handleRateChange = useCallback(() => {\n    setBaseCurrency(quoteCurrency)\n  }, [quoteCurrency])\n\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0))\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '0.5rem' }}>\n      <RowBetween style={{ marginBottom: '0.5rem' }}>\n        <RowFixed>\n          <DoubleCurrencyLogo\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n            size={24}\n            margin={true}\n          />\n          <ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">\n            {currency0?.symbol} / {currency1?.symbol}\n          </ThemedText.DeprecatedLabel>\n        </RowFixed>\n        <RangeBadge removed={removed} inRange={inRange} />\n      </RowBetween>\n\n      <LightCard>\n        <AutoColumn gap=\"md\">\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency0} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount0 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency1} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount1 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <Break />\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Fee tier</Trans>\n            </ThemedText.DeprecatedLabel>\n            <ThemedText.DeprecatedLabel>\n              <Trans>{formatDelta(position?.pool?.fee / BIPS_BASE)}</Trans>\n            </ThemedText.DeprecatedLabel>\n          </RowBetween>\n        </AutoColumn>\n      </LightCard>\n\n      <AutoColumn gap=\"md\">\n        <RowBetween>\n          {title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}\n          <RateToggle\n            currencyA={sorted ? currency0 : currency1}\n            currencyB={sorted ? currency1 : currency0}\n            handleRateToggle={handleRateChange}\n          />\n        </RowBetween>\n\n        <RowBetween>\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Min price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceLower,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.LOWER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Max price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceUpper,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.UPPER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n        </RowBetween>\n        <LightCard padding=\"12px \">\n          <AutoColumn gap=\"4px\" justify=\"center\">\n            <ThemedText.DeprecatedMain fontSize=\"12px\">\n              <Trans>Current price</Trans>\n            </ThemedText.DeprecatedMain>\n            <ThemedText.DeprecatedMediumHeader>{`${formatPrice({\n              price,\n              type: NumberType.TokenTx,\n            })} `}</ThemedText.DeprecatedMediumHeader>\n            <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n              <Trans>\n                {quoteCurrency.symbol} per {baseCurrency.symbol}\n              </Trans>\n            </ThemedText.DeprecatedMain>\n          </AutoColumn>\n        </LightCard>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ButtonOutlined } from 'components/Button'\nimport { AutoRow } from 'components/Row'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: '6px',\n  $borderRadius: '8px',\n}))`\n  color: ${({ theme }) => theme.neutral1};\n  flex: 1;\n`\n\ninterface PresetsButtonsProps {\n  onSetFullRange: () => void\n}\n\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\n  return (\n    <AutoRow gap=\"4px\" width=\"auto\">\n      <Button data-testid=\"set-full-range\" onClick={onSetFullRange}>\n        <ThemedText.DeprecatedBody fontSize={12}>\n          <Trans>Full range</Trans>\n        </ThemedText.DeprecatedBody>\n      </Button>\n    </AutoRow>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { toHex } from '@uniswap/v3-sdk'\n\nimport { Erc20Interface } from '../abis/types/Erc20'\n\nconst ERC20_INTERFACE = new Interface([\n  {\n    constant: false,\n    inputs: [\n      { name: '_spender', type: 'address' },\n      { name: '_value', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]) as Erc20Interface\n\nexport default function approveAmountCalldata(\n  amount: CurrencyAmount<Currency>,\n  spender: string\n): { to: string; data: string; value: '0x0' } {\n  if (!amount.currency.isToken) throw new Error('Must call with an amount of token')\n  const approveData = ERC20_INTERFACE.encodeFunctionData('approve', [spender, toHex(amount.quotient)])\n  return {\n    to: amount.currency.address,\n    data: approveData,\n    value: '0x0',\n  }\n}\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport { AutoColumn } from 'components/Column'\nimport { PositionPreview } from 'components/PositionPreview'\nimport styled from 'styled-components'\n\nimport { Bound, Field } from '../../state/mint/v3/actions'\n\nconst Wrapper = styled.div`\n  padding-top: 12px;\n`\n\nexport function Review({\n  position,\n  outOfRange,\n  ticksAtLimit,\n}: {\n  position?: Position\n  existingPosition?: Position\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  priceLower?: Price<Currency, Currency>\n  priceUpper?: Price<Currency, Currency>\n  outOfRange: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"lg\">\n        {position ? (\n          <PositionPreview\n            position={position}\n            inRange={!outOfRange}\n            ticksAtLimit={ticksAtLimit}\n            title=\"Selected Range\"\n          />\n        ) : null}\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, TraceEvent, useTrace } from 'analytics'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport OwnershipWarning from 'components/addLiquidity/OwnershipWarning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { isSupportedChain } from 'constants/chains'\nimport usePrevious from 'hooks/usePrevious'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { BodyWrapper } from 'pages/AppBody'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState,\n} from 'state/mint/v3/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\nimport { WrongChainError } from 'utils/errors'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from '../../components/Button'\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport FeeSelector from '../../components/FeeSelector'\nimport HoverInlineText from '../../components/HoverInlineText'\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { PositionPreview } from '../../components/PositionPreview'\nimport RangeSelector from '../../components/RangeSelector'\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\nimport RateToggle from '../../components/RateToggle'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\nimport { Bound, Field } from '../../state/mint/v3/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots } from '../Pool/styled'\nimport { Review } from './Review'\nimport { DynamicSection, MediumOnly, ResponsiveTwoColumns, ScrollablePage, StyledInput, Wrapper } from './styled'\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst StyledBodyWrapper = styled(BodyWrapper)<{ $hasExistingPosition: boolean }>`\n  padding: ${({ $hasExistingPosition }) => ($hasExistingPosition ? '10px' : 0)};\n  max-width: 640px;\n`\n\nexport default function AddLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n  if (isSupportedChain(chainId)) {\n    return <AddLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction AddLiquidity() {\n  const navigate = useNavigate()\n  const {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n    tokenId,\n  } = useParams<{\n    currencyIdA?: string\n    currencyIdB?: string\n    feeAmount?: string\n    tokenId?: string\n  }>()\n  const { account, chainId, provider } = useWeb3React()\n  const theme = useTheme()\n  const trace = useTrace()\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined\n  )\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n\n  // mint state\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\n\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition\n  )\n\n  const { formatPrice } = useFormatter()\n  const formattedPrice = formatPrice({\n    price: invertPrice ? price?.invert() : price,\n    type: NumberType.TokenTx,\n  })\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useV3MintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const usdcValues = {\n    [Field.CURRENCY_A]: useStablecoinValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useStablecoinValue(parsedAmounts[Field.CURRENCY_B]),\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const argentWalletContract = useArgentWalletContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  )\n\n  async function onAdd() {\n    if (!chainId || !provider || !account) return\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return\n    }\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n      const { calldata, value } =\n        hasExistingPosition && tokenId\n          ? NonfungiblePositionManager.addCallParameters(position, {\n              tokenId,\n              slippageTolerance: allowedSlippage,\n              deadline: deadline.toString(),\n              useNative,\n            })\n          : NonfungiblePositionManager.addCallParameters(position, {\n              slippageTolerance: allowedSlippage,\n              recipient: account,\n              deadline: deadline.toString(),\n              useNative,\n              createPool: noLiquidity,\n            })\n\n      let txn: { to: string; data: string; value: string } = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value,\n      }\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A]\n        const amountB = parsedAmounts[Field.CURRENCY_B]\n        const batch = [\n          ...(amountA && amountA.currency.isToken\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          ...(amountB && amountB.currency.isToken\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value,\n          },\n        ]\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0',\n        }\n      }\n\n      const connectedChainId = await provider.getSigner().getChainId()\n      if (chainId !== connectedChainId) throw new WrongChainError()\n\n      setAttemptingTxn(true)\n\n      provider\n        .getSigner()\n        .estimateGas(txn)\n        .then((estimate) => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return provider\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              const transactionInfo: TransactionInfo = {\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n                baseCurrencyId: currencyId(baseCurrency),\n                quoteCurrencyId: currencyId(quoteCurrency),\n                createPool: Boolean(noLiquidity),\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\n                feeAmount: position.pool.fee,\n              }\n              addTransaction(response, transactionInfo)\n              setTxHash(response.hash)\n              sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n                ...trace,\n                ...transactionInfo,\n              })\n            })\n        })\n        .catch((error) => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleCurrencySelect = useCallback(\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n      const currencyIdNew = currencyId(currencyNew)\n\n      if (currencyIdNew === currencyIdOther) {\n        // not ideal, but for now clobber the other if the currency ids are equal\n        return [currencyIdNew, undefined]\n      } else {\n        // prevent weth + eth\n        const isETHOrWETHNew =\n          currencyIdNew === 'ETH' ||\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n        const isETHOrWETHOther =\n          currencyIdOther !== undefined &&\n          (currencyIdOther === 'ETH' ||\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\n\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, undefined]\n        } else {\n          return [currencyIdNew, currencyIdOther]\n        }\n      }\n    },\n    [chainId]\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyANew: Currency) => {\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\n      if (idB === undefined) {\n        navigate(`/add/${idA}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdB, navigate]\n  )\n\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew: Currency) => {\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\n      if (idA === undefined) {\n        navigate(`/add/${idB}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdA, navigate]\n  )\n\n  const handleFeePoolSelect = useCallback(\n    (newFeeAmount: FeeAmount) => {\n      onLeftRangeInput('')\n      onRightRangeInput('')\n      navigate(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`)\n    },\n    [currencyIdA, currencyIdB, navigate, onLeftRangeInput, onRightRangeInput]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      navigate('/pools')\n    }\n    setTxHash('')\n  }, [navigate, onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const clearAll = useCallback(() => {\n    onFieldAInput('')\n    onFieldBInput('')\n    onLeftRangeInput('')\n    onRightRangeInput('')\n    navigate(`/add`)\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\n\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA =\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB =\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\n  }`\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const handleSetFullRange = useCallback(() => {\n    getSetFullRange()\n\n    const minPrice = pricesAtLimit[Bound.LOWER]\n    if (minPrice) searchParams.set('minPrice', minPrice.toSignificant(5))\n    const maxPrice = pricesAtLimit[Bound.UPPER]\n    if (maxPrice) searchParams.set('maxPrice', maxPrice.toSignificant(5))\n    setSearchParams(searchParams)\n  }, [getSetFullRange, pricesAtLimit, searchParams, setSearchParams])\n\n  // START: sync values with query string\n  const oldSearchParams = usePrevious(searchParams)\n  // use query string as an input to onInput handlers\n  useEffect(() => {\n    const minPrice = searchParams.get('minPrice')\n    const oldMinPrice = oldSearchParams?.get('minPrice')\n    if (\n      minPrice &&\n      typeof minPrice === 'string' &&\n      !isNaN(minPrice as any) &&\n      (!oldMinPrice || oldMinPrice !== minPrice)\n    ) {\n      onLeftRangeInput(minPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  useEffect(() => {\n    const maxPrice = searchParams.get('maxPrice')\n    const oldMaxPrice = oldSearchParams?.get('maxPrice')\n    if (\n      maxPrice &&\n      typeof maxPrice === 'string' &&\n      !isNaN(maxPrice as any) &&\n      (!oldMaxPrice || oldMaxPrice !== maxPrice)\n    ) {\n      onRightRangeInput(maxPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  // END: sync values with query string\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\">\n        <ThemedText.DeprecatedMain mb=\"4px\">\n          <Trans>Unsupported Asset</Trans>\n        </ThemedText.DeprecatedMain>\n      </ButtonPrimary>\n    ) : !account ? (\n      <TraceEvent\n        events={[BrowserEvent.onClick]}\n        name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n        properties={{ received_swap_quote: false }}\n        element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n      >\n        <ButtonLight onClick={toggleWalletDrawer} $borderRadius=\"12px\" padding=\"12px\">\n          <Trans>Connect wallet</Trans>\n        </ButtonLight>\n      </TraceEvent>\n    ) : (\n      <AutoColumn gap=\"md\">\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled)\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n        >\n          <Text fontWeight={535}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </AutoColumn>\n    )\n\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A]\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B]\n  const currencyAFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyA]\n  )\n  const currencyBFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyB]\n  )\n\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT =\n    addressesAreEquivalent(owner, account) || addressesAreEquivalent(existingPositionDetails?.operator, account)\n  const showOwnershipWarning = Boolean(hasExistingPosition && account && !ownsNFT)\n\n  return (\n    <>\n      <ScrollablePage>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          reviewContent={() => (\n            <ConfirmationModalContent\n              title={<Trans>Add Liquidity</Trans>}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => (\n                <Review\n                  parsedAmounts={parsedAmounts}\n                  position={position}\n                  existingPosition={existingPosition}\n                  priceLower={priceLower}\n                  priceUpper={priceUpper}\n                  outOfRange={outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                />\n              )}\n              bottomContent={() => (\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\n                  <Text fontWeight={535} fontSize={20}>\n                    <Trans>Add</Trans>\n                  </Text>\n                </ButtonPrimary>\n              )}\n            />\n          )}\n          pendingText={pendingText}\n        />\n        <StyledBodyWrapper $hasExistingPosition={hasExistingPosition}>\n          <AddRemoveTabs\n            creating={false}\n            adding={true}\n            positionID={tokenId}\n            autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n            showBackLink={!hasExistingPosition}\n          >\n            {!hasExistingPosition && (\n              <Row justifyContent=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\n                <MediumOnly>\n                  <ButtonText onClick={clearAll}>\n                    <ThemedText.DeprecatedBlue fontSize=\"12px\">\n                      <Trans>Clear all</Trans>\n                    </ThemedText.DeprecatedBlue>\n                  </ButtonText>\n                </MediumOnly>\n              </Row>\n            )}\n          </AddRemoveTabs>\n          <Wrapper>\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\n              <AutoColumn gap=\"lg\">\n                {!hasExistingPosition && (\n                  <>\n                    <AutoColumn gap=\"md\">\n                      <RowBetween paddingBottom=\"20px\">\n                        <ThemedText.DeprecatedLabel>\n                          <Trans>Select pair</Trans>\n                        </ThemedText.DeprecatedLabel>\n                      </RowBetween>\n                      <RowBetween gap=\"md\">\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          hideInput\n                          onMax={() => {\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                          }}\n                          onCurrencySelect={handleCurrencyASelect}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                          currency={currencies[Field.CURRENCY_A] ?? null}\n                          id=\"add-liquidity-input-tokena\"\n                          showCommonBases\n                        />\n\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_B]}\n                          hideInput\n                          onUserInput={onFieldBInput}\n                          onCurrencySelect={handleCurrencyBSelect}\n                          onMax={() => {\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                          }}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                          currency={currencies[Field.CURRENCY_B] ?? null}\n                          id=\"add-liquidity-input-tokenb\"\n                          showCommonBases\n                        />\n                      </RowBetween>\n\n                      <FeeSelector\n                        disabled={!quoteCurrency || !baseCurrency}\n                        feeAmount={feeAmount}\n                        handleFeePoolSelect={handleFeePoolSelect}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={quoteCurrency ?? undefined}\n                      />\n                    </AutoColumn>{' '}\n                  </>\n                )}\n                {hasExistingPosition && existingPosition && (\n                  <PositionPreview\n                    position={existingPosition}\n                    title={<Trans>Selected range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  />\n                )}\n              </AutoColumn>\n\n              {!hasExistingPosition && (\n                <>\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    <RowBetween>\n                      <ThemedText.DeprecatedLabel>\n                        <Trans>Set price range</Trans>\n                      </ThemedText.DeprecatedLabel>\n\n                      {Boolean(baseCurrency && quoteCurrency) && (\n                        <RowFixed gap=\"8px\">\n                          <PresetsButtons onSetFullRange={handleSetFullRange} />\n                          <RateToggle\n                            currencyA={baseCurrency as Currency}\n                            currencyB={quoteCurrency as Currency}\n                            handleRateToggle={() => {\n                              if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                                onLeftRangeInput(\n                                  (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onRightRangeInput(\n                                  (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\n                              }\n                              navigate(\n                                `/add/${currencyIdB as string}/${currencyIdA as string}${\n                                  feeAmount ? '/' + feeAmount : ''\n                                }`\n                              )\n                            }}\n                          />\n                        </RowFixed>\n                      )}\n                    </RowBetween>\n\n                    <RangeSelector\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      currencyA={baseCurrency}\n                      currencyB={quoteCurrency}\n                      feeAmount={feeAmount}\n                      ticksAtLimit={ticksAtLimit}\n                    />\n\n                    {outOfRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>\n                              Your position will not earn fees or be used in trades until the market price moves into\n                              your range.\n                            </Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n\n                    {invalidRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n                  </DynamicSection>\n\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    {!noLiquidity ? (\n                      <>\n                        {Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && (\n                          <AutoColumn gap=\"2px\" style={{ marginTop: '0.5rem' }}>\n                            <Trans>\n                              <ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\">\n                                Current price:\n                              </ThemedText.DeprecatedMain>\n                              <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">\n                                {price && <HoverInlineText maxCharacters={20} text={formattedPrice} />}\n                              </ThemedText.DeprecatedBody>\n                              {baseCurrency && (\n                                <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\n                                </ThemedText.DeprecatedBody>\n                              )}\n                            </Trans>\n                          </AutoColumn>\n                        )}\n                        <LiquidityChartRangeInput\n                          currencyA={baseCurrency ?? undefined}\n                          currencyB={quoteCurrency ?? undefined}\n                          feeAmount={feeAmount}\n                          ticksAtLimit={ticksAtLimit}\n                          price={\n                            price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined\n                          }\n                          priceLower={priceLower}\n                          priceUpper={priceUpper}\n                          onLeftRangeInput={onLeftRangeInput}\n                          onRightRangeInput={onRightRangeInput}\n                          interactive={!hasExistingPosition}\n                        />\n                      </>\n                    ) : (\n                      <AutoColumn gap=\"md\">\n                        {noLiquidity && (\n                          <BlueCard\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                              padding: '1rem 1rem',\n                            }}\n                          >\n                            <ThemedText.DeprecatedBody\n                              fontSize={14}\n                              style={{ fontWeight: 535 }}\n                              textAlign=\"left\"\n                              color={theme.accent1}\n                            >\n                              <Trans>\n                                This pool must be initialized before you can add liquidity. To initialize, select a\n                                starting price for the pool. Then, enter your liquidity price range and deposit amount.\n                                Gas fees will be higher than usual due to the initialization transaction.\n                              </Trans>\n                            </ThemedText.DeprecatedBody>\n                          </BlueCard>\n                        )}\n                        <OutlineCard padding=\"12px\">\n                          <StyledInput\n                            className=\"start-price-input\"\n                            value={startPriceTypedValue}\n                            onUserInput={onStartPriceInput}\n                          />\n                        </OutlineCard>\n                        <RowBetween\n                          style={{\n                            backgroundColor: theme.surface1,\n                            padding: '12px',\n                            borderRadius: '12px',\n                          }}\n                        >\n                          <ThemedText.DeprecatedMain>\n                            <Trans>Starting {baseCurrency?.symbol} Price:</Trans>\n                          </ThemedText.DeprecatedMain>\n                          <ThemedText.DeprecatedMain>\n                            {price ? (\n                              <ThemedText.DeprecatedMain>\n                                <RowFixed>\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\n                                  />{' '}\n                                  <span style={{ marginLeft: '4px' }}>\n                                    {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                                  </span>\n                                </RowFixed>\n                              </ThemedText.DeprecatedMain>\n                            ) : (\n                              '-'\n                            )}\n                          </ThemedText.DeprecatedMain>\n                        </RowBetween>\n                      </AutoColumn>\n                    )}\n                  </DynamicSection>\n                </>\n              )}\n              <div>\n                <DynamicSection disabled={invalidPool || invalidRange || (noLiquidity && !startPriceTypedValue)}>\n                  <AutoColumn gap=\"md\">\n                    <ThemedText.DeprecatedLabel>\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit amounts</Trans>}\n                    </ThemedText.DeprecatedLabel>\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_A]}\n                      onUserInput={onFieldAInput}\n                      onMax={() => {\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                      currency={currencies[Field.CURRENCY_A] ?? null}\n                      id=\"add-liquidity-input-tokena\"\n                      fiatValue={currencyAFiat}\n                      showCommonBases\n                      locked={depositADisabled}\n                    />\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_B]}\n                      onUserInput={onFieldBInput}\n                      onMax={() => {\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                      fiatValue={currencyBFiat}\n                      currency={currencies[Field.CURRENCY_B] ?? null}\n                      id=\"add-liquidity-input-tokenb\"\n                      showCommonBases\n                      locked={depositBDisabled}\n                    />\n                  </AutoColumn>\n                </DynamicSection>\n              </div>\n              <Buttons />\n            </ResponsiveTwoColumns>\n          </Wrapper>\n        </StyledBodyWrapper>\n        {showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}\n        {addIsUnsupported && (\n          <UnsupportedCurrencyFooter\n            show={addIsUnsupported}\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n          />\n        )}\n      </ScrollablePage>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\n\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position?: Position\n  pool?: Pool\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n","import { useWeb3React } from '@web3-react/core'\n\nimport ArgentWalletContractABI from '../abis/argent-wallet-contract.json'\nimport { ArgentWalletContract } from '../abis/types'\nimport { useContract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport function useArgentWalletContract(): ArgentWalletContract | null {\n  const { account } = useWeb3React()\n  const isArgentWallet = useIsArgentWallet()\n  return useContract(\n    isArgentWallet ? account ?? undefined : undefined,\n    ArgentWalletContractABI,\n    true\n  ) as ArgentWalletContract\n}\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Inbox = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"22 12 16 12 14 15 10 15 8 12 2 12\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"\n  }));\n});\nInbox.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nInbox.displayName = 'Inbox';\nexport default Inbox;"],"names":["DataCard","styled","AutoColumn","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","disabled","Break","div","ExplainerText","theme","neutral2","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","ownerAddress","AlertTriangle","style","marginRight","ThemedText","SubHeader","color","_extends","Path","path","fill","accent1","Area","series","xScale","yScale","xValue","yValue","useMemo","d","area","curve","curveStepAfter","x","y1","y0","filter","value","window","innerWidth","undefined","StyledGroup","g","Axis","axisGenerator","ref","axis","select","call","remove","AxisBottom","innerHeight","offset","transform","axisBottom","ticks","brushHandlePath","height","join","brushHandleAccentPath","OffScreenHandle","size","margin","polygon","points","stroke","strokeWidth","strokeLinejoin","Handle","HandleAccent","white","opacity","hover","LabelGroup","visible","TooltipBackground","rect","surface3","Tooltip","text","neutral1","compare","a","b","aNorm","map","toFixed","bNorm","every","v","i","Brush","id","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","useState","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","usePrevious","brushed","useCallback","event","type","selection","mode","scaled","invert","useEffect","current","brushX","extent","Math","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","defs","linearGradient","x1","x2","y2","stop","stopColor","clipPath","y","width","onMouseEnter","onMouseLeave","rx","dominantBaseline","StyledLine","line","Line","count","toString","Button","ButtonGray","ZoomOverlay","Zoom","svg","setZoom","resetBrush","showResetButton","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","onClick","RefreshCcw","ZoomIn","ZoomOut","xAccessor","price0","yAccessor","activeLiquidity","Chart","data","ticksAtLimit","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","top","bottom","left","right","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","Boolean","Bound","LOWER","UPPER","viewBox","overflow","mask","brush","handle","west","east","PRICE_FIXED_DIGITS","computeSurroundingTicks","token0","token1","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","length","tick","Number","currentTickProcessed","liquidityActive","liquidityNet","JSBI","tickToPrice","push","reverse","CHAIN_IDS_MISSING_SUBGRAPH_DATA","ChainId","ARBITRUM_ONE","ARBITRUM_GOERLI","REFRESH_FREQUENCY","blocksPerFetch","getActiveTick","tickCurrent","feeAmount","floor","TICK_SPACINGS","bitmapIndex","tickSpacing","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","useSubgraph","includes","chainId","tickLensTickData","numSurroundingTicks","tickDataLatestSynced","setTickDataLatestSynced","poolState","pool","usePool","activeTick","nearestUsableTick","useWeb3React","poolAddress","PoolState","EXISTS","Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","minIndex","maxIndex","tickLensArgs","ZERO_ADDRESS","Array","_","wordIndex","tickLens","useTickLens","callStates","useSingleContractMultipleData","isError","some","error","isLoading","loading","IsSyncing","syncing","isValid","valid","tickData","result","populatedTicks","reduce","accumulator","sort","useTicksFromTickLens","skipNumber","setSkipNumber","subgraphTickData","setSubgraphTickData","skip","useAllV3TicksQuery","variables","toLowerCase","pollInterval","ms","client","apolloClient","useTicksFromSubgraph","useDensityChartData","LOADING","findIndex","console","liquidity","subsequentTicks","ticksProcessed","concat","usePoolActiveLiquidity","formatData","newData","t","chartEntry","parseFloat","formattedData","ZOOM_LEVELS","FeeAmount","LOWEST","LOW","MEDIUM","HIGH","ChartWrapper","InfoBox","message","icon","ColumnCenter","justifyContent","DeprecatedMediumHeader","padding","marginTop","textAlign","LiquidityChartRangeInput","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","useTheme","tokenAColor","useColor","tokenBColor","isSorted","sortsBefore","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","leftPrice","rightPrice","toSignificant","formatDelta","useFormatter","percent","sign","isUninitialized","gap","minHeight","Inbox","Loader","CloudOff","saturate","critical","BarChart2","PositionPreview","position","title","inRange","baseCurrencyDefault","formatCurrencyAmount","formatPrice","formatTickPrice","currency0","unwrappedToken","currency1","baseCurrency","setBaseCurrency","sorted","quoteCurrency","priceOf","token0PriceLower","token0PriceUpper","handleRateChange","removed","RowBetween","marginBottom","RowFixed","DoubleCurrencyLogo","DeprecatedLabel","ml","fontSize","symbol","RangeBadge","LightCard","CurrencyLogo","currency","mr","amount","amount0","amount1","fee","BIPS_BASE","DeprecatedMain","RateToggle","handleRateToggle","justify","atLimit","direction","DeprecatedSmall","neutral3","NumberType","TokenTx","ButtonOutlined","attrs","$borderRadius","PresetsButtons","onSetFullRange","AutoRow","data-testid","DeprecatedBody","ERC20_INTERFACE","Interface","constant","inputs","name","outputs","payable","stateMutability","approveAmountCalldata","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","to","address","Review","outOfRange","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","AddLiquidityWrapper","isSupportedChain","AddLiquidity","PositionPageUnsupportedContent","navigate","useNavigate","currencyIdA","currencyIdB","feeAmountFromUrl","tokenId","useParams","account","provider","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","existingPositionDetails","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","Position","tickLower","tickUpper","useDerivedPositionInfo","Object","values","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","dependentField","pricesAtTicks","pricesAtLimit","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","useV3DerivedMintInfo","formattedPrice","onFieldAInput","onFieldBInput","onStartPriceInput","useV3MintActionHandlers","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useStablecoinValue","CURRENCY_B","maxAmounts","field","maxAmountSpend","atMaxAmounts","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","async","onAdd","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","interface","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","label","catch","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","isETHOrWETHNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","ButtonPrimary","mb","NOT_APPROVED","PENDING","Dots","ButtonError","Text","fontWeight","TraceEvent","events","BrowserEvent","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","currencyBFiat","owner","useSingleCallResult","ownsNFT","addressesAreEquivalent","operator","showOwnershipWarning","ScrollablePage","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","topContent","bottomContent","AddRemoveTabs","creating","adding","positionID","autoSlippage","showBackLink","Row","minWidth","MediumOnly","ButtonText","DeprecatedBlue","ResponsiveTwoColumns","wide","paddingBottom","CurrencyInputPanel","onUserInput","hideInput","onMax","toExact","onCurrencySelect","showMaxButton","showCommonBases","FeeSelector","DynamicSection","RangeSelector","YellowCard","deprecated_yellow3","DeprecatedYellow","BlueCard","display","flexDirection","alignItems","OutlineCard","StyledInput","className","backgroundColor","surface1","borderRadius","HoverInlineText","maxCharacters","marginLeft","fiatValue","locked","OwnershipWarning","UnsupportedCurrencyFooter","show","SwitchLocaleLink"],"sourceRoot":""}